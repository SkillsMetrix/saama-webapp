import { call, put, takeEvery } from "redux-saga/effects";
import { GET_USER_FETCH, GET_USER_SUCCESS } from "./actions";

function userFetch() {
  return fetch("https://jsonplaceholder.typicode.com/users").then((respnse) =>
    respnse.json()
  );
}

function* workGetUserFetch() {
  const users = yield call (userFetch);
  yield put({ type: GET_USER_SUCCESS }, users);
}
function* mySaga() {
  yield takeEvery(GET_USER_FETCH, workGetUserFetch);
}
export default mySaga;
-------------

import React from "react";
import ReactDOM from "react-dom/client";
import "./index.css";
import App from "./App";
import createSagaMiddleware from "redux-saga";
import mySaga from "./redux/saga";
import { combineReducers, createStore, applyMiddleware } from "redux";
import appReducer from "./redux/reducer";
import { Provider } from "react-redux";
const root = ReactDOM.createRoot(document.getElementById("root"));
const sm = createSagaMiddleware();
const rootReducer = combineReducers({ appReducer });
const store = createStore(rootReducer, applyMiddleware(sm));
sm.run(mySaga);
root.render(
  <Provider store={store}>
    <App />
  </Provider>
);
