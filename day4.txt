import { configureStore } from "@reduxjs/toolkit";
import userReducer from "./userState";

const rootStore = configureStore({
  reducer: {
    useData: userReducer,
  },
});

export default rootStore;



-----------

  import { createAsyncThunk, createSlice } from "@reduxjs/toolkit";

export const loadUsers = createAsyncThunk("users/getUsers", async () => {
  const response = await fetch("https://jsonplaceholder.typicode.com/users");
  const res = await response.json();
  return res;
});

export const userSlice = createSlice({
  name: "users",
  initialState: {
    users: [],
  },
  extraReducers: {
    [loadUsers.fulfilled]: (state, action) => {
      state.users = action.payload;
    },
  },
});
export default userSlice.reducer


  -----------


  import React from "react";
import ReactDOM from "react-dom/client";
import "./index.css";
import App from "./App";
import { Provider } from "react-redux";
import reportWebVitals from "./reportWebVitals";
import rootStore from "./redux/store";

const root = ReactDOM.createRoot(document.getElementById("root"));
root.render(
  <Provider store={rootStore}>
    <App />
  </Provider>
);


-----------


  import logo from "./logo.svg";
import "./App.css";
import { useDispatch } from "react-redux";
import { useEffect } from "react";
import { loadUsers } from "./redux/userState";

function App() {
  const dispatch = useDispatch();

  useEffect(() => {
    dispatch(loadUsers());
  }, []);
  return <div className="App"></div>;
}

export default App;
